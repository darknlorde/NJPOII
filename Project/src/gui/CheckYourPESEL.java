/*

 */
package gui;

import static gui.Gui.mainMenu;
import static gui.Gui.pesel;
import java.awt.Toolkit;
import java.util.ArrayList;

/**
 *
 * @author Mati
 */
public class CheckYourPESEL extends javax.swing.JFrame {

    /**
     * Creates new form CheckYourPESEL
     */
    public CheckYourPESEL() {
        initComponents();
        initialize();
    }

    private void initialize() throws NullPointerException {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Bez tytułu.png")));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Check your PESEL");
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Confirm");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Enter your PESEL here: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton2.setText("Main menu");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(0, 51, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        button1();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        button1();
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        pesel.setVisible(false);
        mainMenu.setVisible(true);
    }//GEN-LAST:event_jButton2MouseClicked
    private void button1() {
        ArrayList<String> list = new ArrayList();
        jLabel2.setText("");
        jLabel3.setText("");
        jLabel4.setText("");
        if (jTextField1.getText().matches("-?\\d+(\\.\\d+)?")
                && (((Integer.parseInt(String.valueOf(jTextField1.getText().charAt(2))) * 10
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(3)))) % 20) >= 1
                && ((Integer.parseInt(String.valueOf(jTextField1.getText().charAt(2))) * 10
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(3)))) % 20) <= 12)
                && jTextField1.getText().length() == 11) {
            list.add(getYear());
            if (getMonth().length() < 2) {
                list.add("0" + getMonth());
            } else {
                list.add(getMonth());
            }
            if (isCorrectDay(Integer.valueOf(list.get(1)), Integer.valueOf(list.get(0))) && areCorrectNumbers()) {
                list.add(String.valueOf(jTextField1.getText().charAt(4)) + String.valueOf(jTextField1.getText().charAt(5)));
                jLabel2.setText("Your PESEL is correct!!!");
                jLabel3.setText("You are born in DD/MM/YYYY: " + list.get(2) + "/" + list.get(1) + "/" + list.get(0));
                jLabel4.setText("Your gender is: ");
                if (jTextField1.getText().charAt(9) % 2 == 0) {
                    jLabel4.setText(jLabel4.getText() + "female.");
                } else {
                    jLabel4.setText(jLabel4.getText() + "male.");
                }
            } else {
                jLabel2.setText("You enter wrong PESEL ( day arg)");
            }

        } else {
            jLabel2.setText("You enter wrong PESEL");
        }
    }

    private String getYear() {
        switch (jTextField1.getText().charAt(2)) {
            case '0':
            case '1':
                return ("19" + jTextField1.getText().charAt(0) + jTextField1.getText().charAt(1));
            case '2':
            case '3':
                return ("20" + jTextField1.getText().charAt(0) + jTextField1.getText().charAt(1));
            case '4':
            case '5':
                return ("21" + jTextField1.getText().charAt(0) + jTextField1.getText().charAt(1));

            case '6':
            case '7':
                return ("22" + jTextField1.getText().charAt(0) + jTextField1.getText().charAt(1));
            case '8':
            case '9':
                return ("18" + jTextField1.getText().charAt(0) + jTextField1.getText().charAt(1));
        }
        return "Wrong YEAR:";
    }

    private String getMonth() {
        switch (jTextField1.getText().charAt(2)) {
            case '0':
            case '1':
                return (String.valueOf(((Integer.parseInt(String.valueOf(jTextField1.getText().charAt(2))) * 10
                        + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(3)))) % 20)));
            case '2':
            case '3':
                return (String.valueOf(((Integer.parseInt(String.valueOf(jTextField1.getText().charAt(2))) * 10
                        + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(3)))) % 20)));

            case '4':
            case '5':
                return (String.valueOf(((Integer.parseInt(String.valueOf(jTextField1.getText().charAt(2))) * 10
                        + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(3)))) % 20)));
            case '6':
            case '7':
                return (String.valueOf(((Integer.parseInt(String.valueOf(jTextField1.getText().charAt(2))) * 10
                        + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(3)))) % 20)));
            case '8':
            case '9':
                return (String.valueOf(((Integer.parseInt(String.valueOf(jTextField1.getText().charAt(2))) * 10
                        + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(3)))) % 20)));
        }
        return "Wrong month:";
    }

    private boolean isCorrectDay(int month, int year) {
        switch (month) {
            case 1:
            case 3:
            case 5:
            case 7:
            case 8:
            case 10:
            case 12:
                if (Integer.valueOf(String.valueOf(jTextField1.getText().charAt(4)) + String.valueOf(jTextField1.getText().charAt(5))) <= 31
                        && Integer.valueOf(String.valueOf(jTextField1.getText().charAt(4)) + String.valueOf(jTextField1.getText().charAt(5))) > 0) {
                    return true;
                }
                break;
            case 4:
            case 6:
            case 9:
            case 11:
                if (Integer.valueOf(String.valueOf(jTextField1.getText().charAt(4)) + String.valueOf(jTextField1.getText().charAt(5))) <= 30
                        && Integer.valueOf(String.valueOf(jTextField1.getText().charAt(4)) + String.valueOf(jTextField1.getText().charAt(5))) > 0) {
                    return true;
                }
                break;
            case 2:
                if (year % 4 == 0) {
                    if (Integer.valueOf(String.valueOf(jTextField1.getText().charAt(4)) + String.valueOf(jTextField1.getText().charAt(5))) <= 29
                            && Integer.valueOf(String.valueOf(jTextField1.getText().charAt(4)) + String.valueOf(jTextField1.getText().charAt(5))) > 0) {
                        return true;
                    }
                } else if (Integer.valueOf(String.valueOf(jTextField1.getText().charAt(4)) + String.valueOf(jTextField1.getText().charAt(5))) <= 28
                        && Integer.valueOf(String.valueOf(jTextField1.getText().charAt(4)) + String.valueOf(jTextField1.getText().charAt(5))) > 0) {
                    return true;
                }
                break;

        }
        return false;
    }

    private boolean areCorrectNumbers() {
        //9×a + 7×b + 3×c + 1×d + 9×e + 7×f + 3×g + 1×h + 9×i + 7×j algorithm         
        if (((Integer.parseInt(String.valueOf(jTextField1.getText().charAt(0))) * 9
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(1))) * 7
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(2))) * 3
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(3))) * 1
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(4))) * 9
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(5))) * 7
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(6))) * 3
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(7))) * 1
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(8))) * 9
                + Integer.parseInt(String.valueOf(jTextField1.getText().charAt(9))) * 7) % 10)
                == Integer.parseInt(String.valueOf(jTextField1.getText().charAt(10)))) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckYourPESEL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckYourPESEL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckYourPESEL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckYourPESEL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckYourPESEL().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
